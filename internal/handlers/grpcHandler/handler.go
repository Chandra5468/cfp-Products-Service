package grpchandler

import (
	"context"
	"log"

	"github.com/Chandra5468/cfp-Products-Service/internal/types"
	"github.com/Chandra5468/cfp-Products-Service/pkg/genproto/products"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

type ProductsGrpcHandler struct {
	store types.ProductsStore
	products.UnimplementedGreeterServer
}

func NewGRPCProductsService(grpc *grpc.Server, productsStore types.ProductsStore) {
	gRPCHandler := &ProductsGrpcHandler{
		store: productsStore,
	}

	products.RegisterGreeterServer(grpc, gRPCHandler)
}

func (p *ProductsGrpcHandler) SayHello(ctx context.Context, req *products.HelloRequest) (*products.HelloReply, error) {
	// req.Name // can use instead of GetName which was generated by grpc files
	log.Println("Request is here ")
	name := req.GetName()
	if name == "" {
		return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
	} else {
		return &products.HelloReply{
			Message: "Hello " + name,
		}, nil
	}
}
